server:
  port: 8080

spring:
  # application:
    # name: gateway-service # Eureka 등 서비스 디스커버리 적용시 등록될 이름
  cloud:
    gateway:
      server:
        webflux:
          globalcors:
            cors-configurations:
              '[/**]':
                allowedOrigins: "http://localhost:3000"
                allowedMethods:
                  - GET
                  - POST
                  - PUT
                  - DELETE
                  - OPTIONS
                allowedHeaders: "*"
                allowCredentials: true
          routes:
            - id: user-service-route
              uri: http://localhost:8081
              # uri: lb://USER-SERVICE # 서비스 디스커버리를 사용할 경우 user 서비스의 주소
              predicates:
                - Path=/api/user/**
              filters:
                - JwtAuthenticationFilter
                - RewritePath=/api/user/(?<segment>.*), /$\{segment}
            - id: management-service-route
              uri: http://localhost:8082
              predicates:
                - Path=/api/management/**
              filters:
                - JwtAuthenticationFilter
                - RewritePath=/api/management/(?<segment>.*), /$\{segment}
            - id: sensor-service-route
              uri: http://localhost:8083
              predicates:
                - Path=/api/sensor/**
              filters:
                - JwtAuthenticationFilter
                - RewritePath=/api/sensor/(?<segment>.*), /$\{segment}
            - id: alarm-service-route
              uri: http://localhost:8084
              predicates:
                - Path=/api/alarm/**
              filters:
                - JwtAuthenticationFilter
                - RewritePath=/api/alarm/(?<segment>.*), /$\{segment}
            - id: dashboard-service-route
              uri: http://localhost:8085
              predicates:
                - Path=/api/dashboard/**
              filters:
                - JwtAuthenticationFilter
                - RewritePath=/api/dashboard/(?<segment>.*), /$\{segment}

---

spring:
  config:
    activate:
      on-profile: docker
  cloud:
    gateway:
      routes:
        - id: user-service-route
          uri: http://user-service:8081
          predicates:
            - Path=/api/user/**
          filters:
            - JwtAuthenticationFilter
            - RewritePath=/api/user/(?<segment>.*), /$\{segment}
        - id: management-service-route
          uri: http://management-service:8082
          predicates:
            - Path=/api/management/**
          filters:
            - JwtAuthenticationFilter
            - RewritePath=/api/management/(?<segment>.*), /$\{segment}
        - id: sensor-service-route
          uri: http://sensor-service:8083
          predicates:
            - Path=/api/sensor/**
          filters:
            - JwtAuthenticationFilter
            - RewritePath=/api/sensor/(?<segment>.*), /$\{segment}
        - id: alarm-service-route
          uri: http://alarm-service:8084
          predicates:
            - Path=/api/alarm/**
          filters:
            - JwtAuthenticationFilter
            - RewritePath=/api/alarm/(?<segment>.*), /$\{segment}
        - id: dashboard-service-route
          uri: http://dashboard-service:8085
          predicates:
            - Path=/api/dashboard/**
          filters:
            - JwtAuthenticationFilter
            - RewritePath=/api/dashboard/(?<segment>.*), /$\{segment}